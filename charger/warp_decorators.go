package charger

// Code generated by github.com/evcc-io/evcc/cmd/tools/decorate.go. DO NOT EDIT.

import (
	"github.com/evcc-io/evcc/api"
)

func decorateWarp(charger api.Charger, meter func() (float64, error), meterEnergy func() (float64, error)) api.Charger {
	switch {
	case meter == nil && meterEnergy == nil:
		return &struct {
			api.Charger
		}{
			Charger: charger,
		}

	case meter != nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.Meter
		}{
			Charger: charger,
			Meter: &decorateWarpMeterImpl{
				meter: meter,
			},
		}

	case meter == nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.MeterEnergy
		}{
			Charger: charger,
			MeterEnergy: &decorateWarpMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case meter != nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.Meter
			api.MeterEnergy
		}{
			Charger: charger,
			Meter: &decorateWarpMeterImpl{
				meter: meter,
			},
			MeterEnergy: &decorateWarpMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}
	}

	return nil
}

type decorateWarpMeterImpl struct {
	meter func() (float64, error)
}

func (impl *decorateWarpMeterImpl) CurrentPower() (float64, error) {
	return impl.meter()
}

type decorateWarpMeterEnergyImpl struct {
	meterEnergy func() (float64, error)
}

func (impl *decorateWarpMeterEnergyImpl) TotalEnergy() (float64, error) {
	return impl.meterEnergy()
}
