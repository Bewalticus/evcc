package charger

// Code generated by github.com/evcc-io/evcc/cmd/tools/decorate.go. DO NOT EDIT.

import (
	"github.com/evcc-io/evcc/api"
)

func decorateEVSE(charger api.Charger, chargeTimer api.ChargeTimer, meter func() (float64, error), meterEnergy func() (float64, error), meterCurrent func() (float64, float64, float64, error), chargerEx func(current float64) error, identifier func() (string, error)) api.Charger {
	switch {
	case chargerEx == nil && identifier == nil && meter == nil && meterCurrent == nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
		}

	case chargerEx == nil && identifier == nil && meter != nil && meterCurrent == nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.Meter
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
		}

	case chargerEx == nil && identifier == nil && meter == nil && meterCurrent == nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx == nil && identifier == nil && meter != nil && meterCurrent == nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.Meter
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx == nil && identifier == nil && meter == nil && meterCurrent != nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.MeterCurrent
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
		}

	case chargerEx == nil && identifier == nil && meter != nil && meterCurrent != nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.Meter
			api.MeterCurrent
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
		}

	case chargerEx == nil && identifier == nil && meter == nil && meterCurrent != nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.MeterCurrent
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx == nil && identifier == nil && meter != nil && meterCurrent != nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.Meter
			api.MeterCurrent
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx != nil && identifier == nil && meter == nil && meterCurrent == nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
		}

	case chargerEx != nil && identifier == nil && meter != nil && meterCurrent == nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.Meter
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
		}

	case chargerEx != nil && identifier == nil && meter == nil && meterCurrent == nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx != nil && identifier == nil && meter != nil && meterCurrent == nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.Meter
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx != nil && identifier == nil && meter == nil && meterCurrent != nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.MeterCurrent
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
		}

	case chargerEx != nil && identifier == nil && meter != nil && meterCurrent != nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.Meter
			api.MeterCurrent
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
		}

	case chargerEx != nil && identifier == nil && meter == nil && meterCurrent != nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.MeterCurrent
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx != nil && identifier == nil && meter != nil && meterCurrent != nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.Meter
			api.MeterCurrent
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx == nil && identifier != nil && meter == nil && meterCurrent == nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.Identifier
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
		}

	case chargerEx == nil && identifier != nil && meter != nil && meterCurrent == nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.Identifier
			api.Meter
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
		}

	case chargerEx == nil && identifier != nil && meter == nil && meterCurrent == nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.Identifier
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx == nil && identifier != nil && meter != nil && meterCurrent == nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.Identifier
			api.Meter
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx == nil && identifier != nil && meter == nil && meterCurrent != nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.Identifier
			api.MeterCurrent
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
		}

	case chargerEx == nil && identifier != nil && meter != nil && meterCurrent != nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.Identifier
			api.Meter
			api.MeterCurrent
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
		}

	case chargerEx == nil && identifier != nil && meter == nil && meterCurrent != nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.Identifier
			api.MeterCurrent
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx == nil && identifier != nil && meter != nil && meterCurrent != nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.Identifier
			api.Meter
			api.MeterCurrent
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx != nil && identifier != nil && meter == nil && meterCurrent == nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.Identifier
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
		}

	case chargerEx != nil && identifier != nil && meter != nil && meterCurrent == nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.Identifier
			api.Meter
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
		}

	case chargerEx != nil && identifier != nil && meter == nil && meterCurrent == nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.Identifier
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx != nil && identifier != nil && meter != nil && meterCurrent == nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.Identifier
			api.Meter
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx != nil && identifier != nil && meter == nil && meterCurrent != nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.Identifier
			api.MeterCurrent
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
		}

	case chargerEx != nil && identifier != nil && meter != nil && meterCurrent != nil && meterEnergy == nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.Identifier
			api.Meter
			api.MeterCurrent
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
		}

	case chargerEx != nil && identifier != nil && meter == nil && meterCurrent != nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.Identifier
			api.MeterCurrent
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}

	case chargerEx != nil && identifier != nil && meter != nil && meterCurrent != nil && meterEnergy != nil:
		return &struct {
			api.Charger
			api.ChargeTimer
			api.ChargerEx
			api.Identifier
			api.Meter
			api.MeterCurrent
			api.MeterEnergy
		}{
			Charger:     charger,
			ChargeTimer: chargeTimer,
			ChargerEx: &decorateEVSEChargerExImpl{
				chargerEx: chargerEx,
			},
			Identifier: &decorateEVSEIdentifierImpl{
				identifier: identifier,
			},
			Meter: &decorateEVSEMeterImpl{
				meter: meter,
			},
			MeterCurrent: &decorateEVSEMeterCurrentImpl{
				meterCurrent: meterCurrent,
			},
			MeterEnergy: &decorateEVSEMeterEnergyImpl{
				meterEnergy: meterEnergy,
			},
		}
	}

	return nil
}

type decorateEVSEChargerExImpl struct {
	chargerEx func(current float64) error
}

func (impl *decorateEVSEChargerExImpl) MaxCurrentMillis(current float64) error {
	return impl.chargerEx(current)
}

type decorateEVSEIdentifierImpl struct {
	identifier func() (string, error)
}

func (impl *decorateEVSEIdentifierImpl) Identify() (string, error) {
	return impl.identifier()
}

type decorateEVSEMeterImpl struct {
	meter func() (float64, error)
}

func (impl *decorateEVSEMeterImpl) CurrentPower() (float64, error) {
	return impl.meter()
}

type decorateEVSEMeterCurrentImpl struct {
	meterCurrent func() (float64, float64, float64, error)
}

func (impl *decorateEVSEMeterCurrentImpl) Currents() (float64, float64, float64, error) {
	return impl.meterCurrent()
}

type decorateEVSEMeterEnergyImpl struct {
	meterEnergy func() (float64, error)
}

func (impl *decorateEVSEMeterEnergyImpl) TotalEnergy() (float64, error) {
	return impl.meterEnergy()
}
